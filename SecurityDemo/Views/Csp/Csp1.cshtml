@using System.Security.Cryptography
@using System.Text
@functions{
    string GetShaHash(HtmlString text)
    {
        byte[] bytes = Encoding.UTF8.GetBytes(text.ToString());
        var hashString = new SHA512Managed();
        byte[] hash = hashString.ComputeHash(bytes);
        return "sha512-" + Convert.ToBase64String(hash);
    }

    string GetNonce()
    {
        const string validChars = "abcdefghijklmnopqrstuvxyzABCDEFGHIJKLMNOPQRSTUVXYZ1234567890";
        char[] nonceChars = new char[25];
        var rand = new Random((int)DateTime.Now.Ticks);
        for (int i = 0; i < nonceChars.Length; i ++)
        {
            nonceChars[i] = validChars[rand.Next(0, validChars.Length - 1)];
        }
        return new string(nonceChars);
    }
}
@{
    ViewBag.Title = "Home Page";

    const string cspName = "Content-Security-Policy";
    var csp = new StringBuilder("default-src 'self'; script-src 'self'");

    var script = new HtmlString("document.writeln('<b>Cacheable content using sha512</b>');");
    csp.AppendFormat(" '{0}'", GetShaHash(script));

    var nonce = GetNonce();
    csp.AppendFormat(" 'nonce-{0}'", nonce);

    var script2 = new HtmlString("document.writeln('<b>sha script 2</b>')");
    csp.AppendFormat(" '{0}'", GetShaHash(script2));

    var link = new HtmlString("alert('hej'); return false;");
    csp.AppendFormat(" {0}", GetShaHash(link));

    Response.Headers.Add(cspName, csp.ToString());
}

<section>
	<h1></h1>

</section>
<script>@script</script>
<script nonce="@nonce">
    document.writeln('<i>Non-cacheable nonce script</i>');
</script>
<script>alert('This script will not run')</script>
<script nonce="@nonce">
	document.writeln("<p>Hello world</p>");
</script>
<script>@script2</script>